<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.sysManage.dao.CodeConvertMapper" >
  <resultMap id="BaseResultMap" type="com.demo.sysManage.model.CodeConvert" >
    <id column="codeType" property="codeType" jdbcType="VARCHAR" />
    <id column="codeCode" property="codeCode" jdbcType="VARCHAR" />
    <result column="codeName" property="codeName" jdbcType="VARCHAR" />
    <result column="upperCode" property="upperCode" jdbcType="VARCHAR" />
    <result column="validStatus" property="validStatus" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    codeType, codeCode, codeName, upperCode, validStatus, remark, flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from ybt_codeconvert
    where codeType = #{codeType,jdbcType=VARCHAR}
      and codeCode = #{codeCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from ybt_codeconvert
    where codeType = #{codeType,jdbcType=VARCHAR}
      and codeCode = #{codeCode,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.demo.sysManage.model.CodeConvert" >
    insert into ybt_codeconvert (codeType, codeCode, codeName, 
      upperCode, validStatus, remark, 
      flag)
    values (#{codeType,jdbcType=VARCHAR}, #{codeCode,jdbcType=VARCHAR}, #{codeName,jdbcType=VARCHAR}, 
      #{upperCode,jdbcType=VARCHAR}, #{validStatus,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{flag,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.sysManage.model.CodeConvert" >
    insert into ybt_codeconvert
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="codeType != null" >
        codeType,
      </if>
      <if test="codeCode != null" >
        codeCode,
      </if>
      <if test="codeName != null" >
        codeName,
      </if>
      <if test="upperCode != null" >
        upperCode,
      </if>
      <if test="validStatus != null" >
        validStatus,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="codeType != null" >
        #{codeType,jdbcType=VARCHAR},
      </if>
      <if test="codeCode != null" >
        #{codeCode,jdbcType=VARCHAR},
      </if>
      <if test="codeName != null" >
        #{codeName,jdbcType=VARCHAR},
      </if>
      <if test="upperCode != null" >
        #{upperCode,jdbcType=VARCHAR},
      </if>
      <if test="validStatus != null" >
        #{validStatus,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.sysManage.model.CodeConvert" >
    update ybt_codeconvert
    <set >
      <if test="codeName != null" >
        codeName = #{codeName,jdbcType=VARCHAR},
      </if>
      <if test="upperCode != null" >
        upperCode = #{upperCode,jdbcType=VARCHAR},
      </if>
      <if test="validStatus != null" >
        validStatus = #{validStatus,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
    </set>
    where codeType = #{codeType,jdbcType=VARCHAR}
      and codeCode = #{codeCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.sysManage.model.CodeConvert" >
    update ybt_codeconvert
    set codeName = #{codeName,jdbcType=VARCHAR},
      upperCode = #{upperCode,jdbcType=VARCHAR},
      validStatus = #{validStatus,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR}
    where codeType = #{codeType,jdbcType=VARCHAR}
      and codeCode = #{codeCode,jdbcType=VARCHAR}
  </update>
</mapper>